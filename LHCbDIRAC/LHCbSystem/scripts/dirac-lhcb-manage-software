#!/usr/bin/env python
########################################################################
# $Header: /tmp/libdirac/tmp.stZoy15380/dirac/DIRAC3/LHCbSystem/scripts/Attic/dirac-lhcb-manage-software,v 1.2 2008/08/01 11:22:25 paterson Exp $
# File :   dirac-lhcb-manage-software
# Author : Stuart Paterson
########################################################################
__RCSID__   = "$Id: dirac-lhcb-manage-software,v 1.2 2008/08/01 11:22:25 paterson Exp $"
__VERSION__ = "$Revision: 1.2 $"
import sys
from DIRACEnvironment import DIRAC
from DIRAC.Core.Base import Script
from DIRAC.ConfigurationSystem.Client.LocalConfiguration import LocalConfiguration
from DIRAC.Core.Base.Agent import createAgent
from DIRAC import gConfig

Script.parseCommandLine( ignoreErrors = True )
args = Script.getPositionalArgs()

def usage():
  print 'Usage: %s [<PATH TO SOFTWARE CACHE>]' %(Script.scriptName)
  print 'If not specified, path to software cache taken from /LocalSite/SharedArea'
  DIRAC.exit(2)

if len(args) > 2:
  usage()

if not args:
  sharedArea = gConfig.getValue('/LocalSite/SharedArea')
else:
  sharedArea = args[0]

exitCode = 0
agentName = 'LHCb/SoftwareManagementAgent'
localCfg = LocalConfiguration()
localCfg.addDefaultEntry('/LocalSite/SharedArea',sharedArea)
localCfg.setConfigurationForAgent(agentName)
resultDict = localCfg.loadUserData()
if not resultDict[ 'OK' ]:
  print "There were errors when loading configuration", resultDict['Message']
  sys.exit(1)

agent = createAgent(agentName)
result = agent.run_once()

if not result['OK']:
  print 'ERROR %s' %result['Message']
  exitCode = 2

DIRAC.exit(exitCode)