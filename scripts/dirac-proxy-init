#!/usr/bin/python
# $Header: /tmp/libdirac/tmp.stZoy15380/dirac/DIRAC3/scripts/Attic/dirac-proxy-init,v 1.7 2008/04/14 14:19:56 atsareg Exp $

""" Initialize grid proxy using user's grid certificate.
"""

__RCSID__ = "$Id: dirac-proxy-init,v 1.7 2008/04/14 14:19:56 atsareg Exp $"
__VERSION__ = "$Release: $"

import os,stat,getopt,sys
from DIRAC.Core.Utilities.GridCredentials import setDIRACGroupInProxy, \
                                                 createProxy, \
                                                 getNewGridProxyFile

home = os.environ['HOME']
certfile = home+"/.globus/usercert.pem"
keyfile = home+"/.globus/userkey.pem"
debug = False
hours = 24
group = 'lhcb_user'

###################################################################################
def printUsage():

  print """
  Syntax: dirac-proxy-init [options]

  Options:
    -h, --help                    displays usage
    -g, --group                   define the user group
    -d, --debug                   displays debugging output
    --hours, --valid <hours>      proxy validity period in hours
    """

def getOptions():

  global debug, hours, group

  try:
    opts,args = getopt.getopt(sys.argv[1:], "hdg:", ["help","version","debug","hours=","valid=","group="])

  except getopt.GetoptError:
  # print help information and exit:
    printUsage()
    sys.exit(2)

  for o, a in opts:
    if o in ("-d","--debug"):
      debug = True
    if o in ("-h", "--help"):
      printUsage()
      sys.exit()
    if o == "--version":
      print __VERSION__
      sys.exit()
    if o in ("--valid", "--hours"):
      if a.find(':') != -1:
        h,m = a.split(':')
        if int(m) > 0:
          hours = int(h)+1
        else:
          hours = int(h)
      else:
        hours = int(a)
    if o in ( '-g','--group' ):
      group = a

#####################################################################################

getOptions()

result = createProxy(certfile,keyfile,hours=hours)
if not result['OK']:
  print "Failed to create proxy",result['Message']

proxy = result['Value']

proxy_file = getNewGridProxyFile()
if os.path.exists(proxy_file):
  os.remove(proxy_file)

proxy = setDIRACGroupInProxy(proxy,group)

pfile = open(proxy_file,'w')
pfile.write(proxy)
pfile.close()
os.chmod(proxy_file, stat.S_IRUSR | stat.S_IWUSR)
