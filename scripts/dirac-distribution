#!/usr/bin/env python
########################################################################
# $Header: /tmp/libdirac/tmp.stZoy15380/dirac/DIRAC3/scripts/Attic/dirac-distribution,v 1.19 2008/09/09 16:44:10 atsareg Exp $
# File :   dirac-distribution
# Author : Ricardo Graciani
########################################################################
__RCSID__   = "$Id: dirac-distribution,v 1.19 2008/09/09 16:44:10 atsareg Exp $"
__VERSION__ = "$Revision: 1.19 $"
"""
    Script to prepare DIRAC distribution tarballs
"""

def parse_options():
  """
   parse command line options:
  """
  import getopt
  help = """
   -b --build                  Prepare compile tars for local platform
   -d --debug                  Set debug flag
   -e --external=<version>     DIRAC-external <version> to install (overwrites -v)
   -h --help                   Print this
   -i --python=<24|25>         Use python<24|25>
   -r --repository=<rep>       Use <rep> as cvs repository
   -t --tar                    Retrieve from tar
   -u --url=<url>              Use <url> to download tarballs
   -v --version=<version>      DIRAC <version> to install
   -S --server                 Prepare full external tar
   -W --WorkflowLib=<version>  Build just WorkflowLib tar for <version>

  from DIRAC framework:

    -o --option=<Option=value> <Option=value> to add
    -s --section=<section>     Set base <section> for relative parsed options
    -c --cert=<cert>           Use server certificate <cert> to connect to Core Services

  """
  shortOptions = 'bde:hi:p:r:tu:v:o:s:SW:'
  longOptions  = ['build', 'debug', 'external=', 'help', 'python=', 'repository=', 'url=', 'version=',
                  'server', 'tar', 'WorkflowLib=',
                  'option=', 'section=']
  try:
    ( optionVals, extraOptions ) = getopt.getopt( sys.argv[1:], shortOptions, longOptions )
  except getopt.GetoptError, x:
    dirac.logERROR( 'Parsing command line: %s' % x )
    optionVals = [ ('-h','') ]

  if ('-h','') in optionVals or ('--help','') in optionVals:
    dirac.logHelp( help )

  ext = None
  workflowLibVersion = ''
  for o,v in optionVals:
    if o == '-b' or o == '--build':
      dirac.build()
    elif o == '-d' or o == '--debug':
      dirac.debug()
    elif o == '-e' or o == '--external':
      ext = v
    elif o == '-i' or o == '--python':
      dirac.setPython(v)
    elif o == '-r' or o == '--repository':
      dirac.setCVS(v)
    elif o == '-u' or o == '--url':
      dirac.setURL(v)
    elif o == '-v' or o == '--version':
      dirac.setVersion(v)
    elif o == '-t' or o == '--tar':
      dirac.tarFlag()
    elif o == '-S' or o == '--server':
      dirac.requireServer()
    elif o == '-W' or o == '--WorkflowLib':
      workflowLibVersion = v

    if ext: function.External(ext)
    if workflowLibVersion: dirac.workflowLib(workflowLibVersion)

def exit( ret ):
  """
   Remove tmpDir and exit
  """
  dirac.logINFO( 'Remember to remove temporary Directory "%s"' % rootPath )
  sys.exit( ret )

import os, sys
from dirac_functions import functions
myFullName  = os.path.realpath( sys.argv[0] )
myShortName = os.path.basename( myFullName )

dirac = functions( myFullName )
dirac.platform()
# get a tmp Root path to prepare the distribution
rootPath = dirac.tmpDir()
# by default use CVS repository
dirac.cvsFlag()

parse_options()
dirac.logINFO( 'Preparing DIRAC distribution at "%s"' %  dirac.root() )
if dirac.buildFlag:
  dirac.logINFO( 'Using platform "%s"' %  dirac.localPlatform )

tars =  dirac.createSrcTars()
tars += dirac.createBinTars()

if tars > 0:
  dirac.logINFO( 'Upload tar files to repository:' )
  # dirac.logINFO( ' scp %s/*.tar.gz lhcbprod@lxplus.cern.ch:/afs/cern.ch/lhcb/distribution/DIRAC3' % rootPath )
  dirac.logINFO( " ( cd %s ; tar -cf - *.tar.gz ) | ssh lhcbprod@lxplus.cern.ch 'cd /afs/cern.ch/lhcb/distribution/DIRAC3 &&  tar -xvf - && ls *.tar.gz > DIRAC.list'" % rootPath )
  # dirac.logINFO( ' gsiscp -P 1975 %s/*.tar.gz lhcbweb.pic.es:/opt/dirac/webRoot/distribution/DIRAC3' % rootPath )
  dirac.logINFO( " ( cd %s ; tar -cf - *.tar.gz ) | gsissh -p 1975 lhcbweb.pic.es 'cd /opt/dirac/webRoot/distribution/DIRAC3 &&  tar -xvf - && ls *.tar.gz > DIRAC.list'" % rootPath )
exit(0)
