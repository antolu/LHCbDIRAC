#!/usr/bin/env python
#
import os,sys,imp
#
DiracRoot = os.path.dirname(os.path.dirname( os.path.realpath( sys.argv[0] ) ))
if 'DIRACPLAT' in os.environ:
  DiracPlatform = os.environ['DIRACPLAT']
else:
  platformPath = os.path.join( DiracRoot, "DIRAC", "Core", "Utilities", "Platform.py" )
  platFD = open( platformPath, "r" )
  Platform = imp.load_module( "Platform", platFD, platformPath, ( "", "r", imp.PY_SOURCE ) )
  platFD.close()
  DiracPlatform = Platform.getPlatformString()
  if not DiracPlatform or DiracPlatform == "ERROR":
    print >> sys.stderr, "Can not determine local platform"
    sys.exit(-1)
DiracPath        = '%s' % ( os.path.join(DiracRoot,DiracPlatform,'bin'), )
DiracPythonPath  = '%s' % ( DiracRoot, )
DiracLibraryPath      = '%s' % ( os.path.join(DiracRoot,DiracPlatform,'lib'), )

baseLibPath = DiracLibraryPath
for entry in os.listdir( baseLibPath ):
  if os.path.isdir( entry ):
    DiracLibraryPath = '%s:%s' % ( DiracLibraryPath, os.path.join( baseLibPath, entry ) ) 


os.environ['PATH'] = '%s:%s' % ( DiracPath, os.environ['PATH'] )

for varName in ( 'LD_LIBRARY_PATH', 'DYLD_LIBRARY_PATH'):
  if varName not in os.environ:
    os.environ[varName] = DiracLibraryPath
  else:
    os.environ[varName] = '%s:%s' % ( DiracLibraryPath, os.environ[varName] )

if 'PYTHONPATH' not in os.environ:
  os.environ['PYTHONPATH'] = DiracPythonPath
else:
  os.environ['PYTHONPATH'] = '%s:%s' % ( DiracPythonPath, os.environ['PYTHONPATH'] )

DiracScript = os.path.join( DiracRoot, 'DIRAC/Core/scripts/dirac-version.py' )

certDir = os.path.join( "etc", "grid-security", "certificates" )
if 'X509_CERT_DIR' not in os.environ and   not os.path.isdir( os.path.join( "/", certDir ) ) and   os.path.isdir( os.path.join( DiracRoot, certDir ) ):
  os.environ[ 'X509_CERT_DIR' ] = os.path.join( DiracRoot, certDir ) 

if sys.argv[1:]:
  args = ' "%s"' % '" "'.join( sys.argv[1:] )
else:
  args = ''
sys.exit( os.system('python "%s"%s' % ( DiracScript, args )  ) / 256 )
